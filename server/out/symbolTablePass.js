"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("./utils");
exports.antlrP4HeaderDec = new Map();
exports.antlrP4StructHeaders = new Map();
const P4Listener_1 = require("./antlr_autogenerated/P4Listener");
var MyP4Listner = function (table) {
    P4Listener_1.P4Listener.call(this); // inherit default listener
    P4Listener_1.P4Listener.symTableStack = table;
    return this;
};
// continue inheriting default listener
MyP4Listner.prototype = Object.create(P4Listener_1.P4Listener.prototype);
MyP4Listner.prototype.constructor = MyP4Listner;
function addSymbolTableEntry(stack, id, entry) {
    utils_1.logloglog("identifier: " + id);
    utils_1.logloglog("entry: " + entry.getText());
    utils_1.logloglog("stack height: " + stack.height());
    stack.set(id, entry);
}
// MyP4Listner.prototype.enterConstantDeclaration = function(ctx) {
// 	var id = ctx.getChild(3).getText();
// 	var entry = ctx;
// 	addSymbolTableEntry(this.symTableStack, id, ctx);
// };
MyP4Listner.prototype.enterControlDeclaration = function (ctx) {
    var id = ctx.getChild(0).getText();
    var entry = ctx;
    addSymbolTableEntry(this.symTableStack, id, ctx);
    this.symTableStack.push();
};
MyP4Listner.prototype.exitControlDeclaration = function (ctx) {
    this.symTableStack.pop();
};
// Enter a parse tree produced by P4Parser#tableDeclaration.
P4Listener_1.P4Listener.prototype.enterTableDeclaration = function (ctx) {
    var id = ctx.getChild(2).getText();
    var entry = ctx;
    addSymbolTableEntry(this.symTableStack, id, ctx);
    this.symTableStack.push();
};
P4Listener_1.P4Listener.prototype.exitTableDeclaration = function (ctx) {
    this.symTableStack.pop();
};
exports.SymbolTablePass = MyP4Listner;
//# sourceMappingURL=symbolTablePass.js.map