import { P4Listener } from '../antlr_autogenerated/P4Listener';
import { logDebug, logInfo} from '../utils/logger';
import Stack from '../utils/stack';
import { P4IR, Attribute } from './p4_ir';
import { P4IRTypes } from './p4_ir_types';

export class SymbolTable{
	SYMBOL_STACK: Stack<P4IR>;
	SYMBOL_ARR: Array<P4IR>;

	constructor(){
		this.SYMBOL_STACK = new Stack();
		this.SYMBOL_ARR = new Array();
	}

	private sym_add(p: P4IR): void {
		// TODO
		this.SYMBOL_ARR.push(p);
	}

	add_attr(name: string, attr: Attribute): void{
		this.SYMBOL_STACK.peek().add(name, attr);
	}

	push(ctx, type: P4IRTypes): P4IR {
		let p: P4IR = this.SYMBOL_STACK.peek();
		let newP: P4IR = new P4IR(type, p, ctx);
		this.SYMBOL_STACK.push(newP);
		this.sym_add(newP);

		logDebug("Push: " + type);
		return newP;
	}

	pop(): P4IR{
		return this.SYMBOL_STACK.pop();
	}
}