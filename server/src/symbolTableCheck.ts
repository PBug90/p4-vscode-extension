//anywhere I push and pop in the first, i push and pop here
// difference is that I have to check not at the declaration, but the use. 
//there is a use in the names of the actions in the symbol table, but i've never defined these actions in the code pass, but there's undefined variable

import {
	TextDocument,
	Diagnostic,
	DiagnosticSeverity,
	CompletionItemKind,
	DidChangeTextDocumentNotification,
} from 'vscode-languageserver';

import { loglog , logloglog } from './utils';


export let antlrP4HeaderDec: Map<string, any[]> = new Map();
export let antlrP4StructHeaders: Map<string, string> = new Map();

import { CommonTokenStream, InputStream} from 'antlr4';

import { P4Lexer } from './antlr_autogenerated/P4Lexer';
import { P4Parser } from './antlr_autogenerated/P4Parser';
import { P4Listener } from './antlr_autogenerated/P4Listener';
import { ParseTreeWalker } from 'antlr4/tree';
import { SIGUSR1 } from 'constants';
import { EOF } from 'dns';

	

	function undefVarAlert(value){
		logloglog("Error: undefined variable \"" + value + "\"");
	}

	var MyP4Listner = function(table) : void {
		P4Listener.call(this); // inherit default listener
		P4Listener.symTableStack = table;
		return this;
	};

	// continue inheriting default listener
	MyP4Listner.prototype = Object.create(P4Listener.prototype);
	MyP4Listner.prototype.constructor = MyP4Listner;

	MyP4Listner.prototype.enterActionRef = function(ctx) {
		if (this.symTableStack.getItsHeight(ctx.getText()) == undefined){
			undefVarAlert(ctx.getText());
			logloglog("has it been declared?");
		}
	};


export var SymbolTableCheck = MyP4Listner;